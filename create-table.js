import { sql } from './db.js'

//tipo usuÃ¡rio
sql`
    CREATE TABLE "tipoUsuario" (
    "id_tipousuario" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "name" varchar(100) NOT NULL
    );
`
.then(() => {
    sql`
    CREATE TABLE "usuario" (
    "id_usuario" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "email" varchar(255) UNIQUE NOT NULL,
    "password" varchar(255) NOT NULL,
    "firstName" varchar(100) NOT NULL,
    "lastName" varchar(100) NOT NULL,
    "id_tipousuario" integer REFERENCES "tipoUsuario"("id_tipousuario")
    );
`
    .then(() => {
        sql`
    CREATE TABLE "recipes" (
    "id_recipe" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "title" varchar(255) NOT NULL,
    "image" varchar(255) NOT NULL,
    "description" text NOT NULL,
    "steps" text NOT NULL,
    "calories" integer NOT NULL,
    "prepTime" integer NOT NULL,
    "id_usuario" integer NOT NULL REFERENCES "usuario"("id_usuario")
    );
`
        .then(() => {
            sql`

                CREATE TABLE "ingredients" (
                "id_ingredient" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                "name" varchar(255) UNIQUE NOT NULL
                );
            `
            .then(() => {
                sql`
                    CREATE TABLE "recipe_ingredients" (
                    "id_recipe" integer NOT NULL REFERENCES "recipes"("id_recipe"),
                    "id_ingredient" integer NOT NULL REFERENCES "ingredients"("id_ingredient"),
                    "measure_unity" varchar(50) NOT NULL,
                    "quantity" varchar(50) NOT NULL
                    );
                `
                .then(() => {
                    console.log('Tabela criada')
                })
            })
        })
    })
})